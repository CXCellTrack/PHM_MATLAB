function data2write = Diag_Sewage()

%% 第一步：生成贝叶斯网络，进行故障诊断
diagpath = getphmpath('diag');

% ------------------- 2、载入/计算bnet ---------------------- %
[ bnet all_name n_fault s_fault n_pipe n_sensor ] = buildBNT_Sewage();

% ------------------- 2、配置CPD表 ---------------------- %
bnet1 = AssignCPD_Sewage( bnet, n_fault, s_fault, n_sensor);
bnetCPD = add_gaussian_Pseudo_count( bnet1 ); % 在bnet中增加高斯伪计数功能（用于参数更新）
bnet_path = [diagpath, '\Sewage\data\mat\bnetCPD_Sewage.mat'];
save(bnet_path, 'bnetCPD');
% bnet：不包含CPD（结构确定之后就不变了）
% bnet1：包含CPD
% bnet2：包含CPD和高斯伪计数

% ------------------- 3、配置贝叶斯推理引擎 ---------------------- %
% 配置引擎的速度较慢，按照模型大小而定，配置完成后的计算速度很快
writelog('配置贝叶斯网络推理引擎...\n');
engine = AssignEngine_Sewage( bnetCPD );
writelog('输入传感器证据进行推理...\n');

% ------------------- 4、输入证据进行推理 ---------------------- %
if 0
    %
    % 此处需从传感器数据库拉取数据，并组合成证据所要求的数据格式
    %
else 
    % ===================================== %
    rng(0);
    % 随机生成传感器数据
    n_node = n_fault + n_sensor;
    cishu = 1; % 证据次数对结果的影响暂时还不清楚，先不用
    evidence = cell(n_node, cishu);
    for j=n_fault+1:n_node
        ps = bnet.parents{j}; % 找出传感器节点的父节点
        nps = numel(ps);
        for t=1:cishu
            evidence{j,t} = rand(1)*(2^nps); % 随机生成证据
        end
    end
    % ===================================== %
end
% 往引擎中输入证据，得到更新后的引擎
[engine_got_evidence, ~] = enter_evidence(engine, evidence);

% ------------------- 5、得到各故障节点边缘概率分布 ---------------------- %
prob = cell(n_fault, 1);
for i=1:n_fault
    prob{i} = marginal_nodes(engine_got_evidence, i, 1);
end

writelog('故障诊断完成！\n\n');

% ------------------- 6、组合数据、本地备份txt ---------------------- %
% 调用函数将待写入数据组合成cell形式
data2write = get_DR_Sewage( all_name, prob, n_fault, n_pipe, s_fault );
% 顺便在本地保存一份mat，之后用健康度评估时就无需抓取数据库了
data_path = [diagpath, '\Sewage\data\mat\data2write_Sewage.mat'];
save(data_path, 'data2write');
% 调用函数 WriteData2txt 将数据保存在 txt 中
backup_path = [diagpath, '\Sewage\data\backup_Sewage.txt'];
WriteData2txt( backup_path, data2write );










